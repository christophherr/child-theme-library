<?php
/**
 * Child Theme Library
 *
 * WARNING: This file is a part of the core Child Theme Library.
 * DO NOT edit this file under any circumstances. Please use
 * the functions.php file to make any theme modifications.
 *
 * @package   SEOThemes\ChildThemeLibrary\Customizer
 * @link      https://github.com/seothemes/child-theme-library
 * @author    SEO Themes
 * @copyright Copyright Â© 2018 SEO Themes
 * @license   GPL-2.0+
 */

namespace SEOThemes\ChildThemeLibrary\Customizer;

use function SEOThemes\ChildThemeLibrary\Utilities\get_config;

// If this file is called directly, abort.
if ( ! defined( 'ABSPATH' ) ) {

	die;

}

add_action( 'customize_register', __NAMESPACE__ . '\settings' );
/**
 * Sets up the theme customizer sections, controls, and settings.
 *
 * @since  1.0.0
 *
 * @access public
 *
 * @param  object $wp_customize Global customizer object.
 *
 * @throws \Exception If no sub-config is found.
 *
 * @return void
 */
function settings( $wp_customize ) {

	$wp_customize->remove_control( 'background_color' );
	$wp_customize->remove_control( 'header_textcolor' );

	/*
	| ------------------------------------------------------------------
	| Colors
	| ------------------------------------------------------------------
	|
	| Adds the color settings to the Customizer. Loops through an
	| array of custom colors defined in the child theme config
	| file to output a new setting and control for each one.
	|
	*/
	$colors = get_config( 'colors' );

	foreach ( $colors as $color => $settings ) {

		$setting = "child_theme_{$color}_color";
		$label   = ucwords( str_replace( '_', ' ', $color ) ) . __( ' Color', 'child-theme-library' );

		$wp_customize->add_setting(
			$setting,
			array(
				'default'           => $settings['default'],
				'sanitize_callback' => 'SEOThemes\ChildThemeLibrary\Utilities\sanitize_rgba_color',
			)
		);

		$wp_customize->add_control(
			new \RGBA_Customizer_Control(
				$wp_customize,
				$setting,
				array(
					'section'      => 'colors',
					'label'        => $label,
					'settings'     => $setting,
					'show_opacity' => true,
					'palette'      => true,
				)
			)
		);
	}
}
